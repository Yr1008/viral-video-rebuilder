'use client';
import React, { useState } from 'react';
async function post(path:string, body:any){ const r = await fetch(path,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)}); const j = await r.json(); if(!r.ok) throw new Error(j.error||'error'); return j; }
export default function Page(){ const [url,setUrl]=useState(''); const [embed,setEmbed]=useState<any>(null); const [transcript,setTranscript]=useState(''); const [script,setScript]=useState(''); const [assets,setAssets]=useState<any>(null); const [analysis,setAnalysis]=useState<any>(null); const [voUrl,setVoUrl]=useState<string>(''); const [renderUrl,setRenderUrl]=useState(''); const [loading,setLoading]=useState<string>(''); const [voice,setVoice]=useState('alloy');
const preview = async()=>{ setLoading('preview'); try{ setEmbed(await post('/api/oembed',{url})); } finally{ setLoading(''); } };
const transcribe = async()=>{ setLoading('transcribe'); try{ const u = new URL(url); if(u.host.includes('youtube')||u.host.includes('youtu.be')){ const j = await post('/api/transcribe',{url}); setTranscript(j.text);} else if (u.host.includes('tiktok.com')){ const j = await post('/api/transcribe/tiktok',{url}); setTranscript(j.text);} else { alert('Instagram transcription coming next; for now paste a YouTube/TikTok link.'); } } finally { setLoading(''); } };
const rewrite = async()=>{ setLoading('rewrite'); try{ const j = await post('/api/rewrite',{transcript, voice}); setScript(j.script); } finally{ setLoading(''); } };
const generate = async()=>{ setLoading('gen'); try{ const j = await post('/api/generate-assets',{script}); setAssets(j);} finally{ setLoading(''); } };
const analyze = async()=>{ setLoading('analyze'); try{ const j = await post('/api/analyze',{script}); setAnalysis(j);} finally{ setLoading(''); } };
const tts = async()=>{ setLoading('tts'); try{ const j = await post('/api/generate/audio',{text: script.replace(/\n/g,' ') , voice}); setVoUrl(j.url);} finally{ setLoading(''); } };
const assemble = async()=>{ setLoading('assemble'); try{ const j = await post('/api/assemble',{ assets, analysis, audioUrl: voUrl }); setRenderUrl(j.renderUrl);} finally{ setLoading(''); } };
return (<main style={{padding:24}}><h1 style={{fontSize:24,fontWeight:600,marginBottom:8}}>Viral Video Rebuilder — v1 Pipeline</h1><p style={{opacity:0.8}}>Preview → Transcribe → Rewrite → Generate → Analyze → TTS → Assemble</p>
<div style={{display:'grid',gap:16,gridTemplateColumns:'2fr 1fr',marginTop:24}}>
<div><label style={{fontWeight:500}}>Source link</label><div style={{display:'flex',gap:8}}><input style={{flex:1,padding:8,borderRadius:8}} placeholder="https://…" value={url} onChange={(e)=>setUrl(e.target.value)} /><button onClick={preview} disabled={!url||loading==='preview'}>{loading==='preview'?'…':'Preview'}</button></div>
<div style={{border:'1px solid #1f2937',borderRadius:12,marginTop:8,minHeight:200,padding:8}}>{(!embed)&&(<div style={{fontSize:12,opacity:0.7}}>Paste a link and click Preview.</div>)}{embed?.platform==='youtube'&&(<iframe style={{width:'100%',aspectRatio:'16/9',borderRadius:8}} src={embed.embed} allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" />)}{embed?.platform==='tiktok'&&(<div style={{fontSize:12}}>TikTok: <a href={embed.embed} target="_blank">Open</a></div>)}{embed?.platform==='instagram'&&(<div style={{fontSize:12}}>Instagram: <a href={embed.embed} target="_blank">Open</a></div>)}</div></div>
<div><label style={{fontWeight:500}}>Transcription</label><button style={{width:'100%',padding:8,borderRadius:8}} onClick={transcribe} disabled={!url||loading==='transcribe'}>{loading==='transcribe'?'Transcribing…':'Transcribe'}</button><textarea style={{width:'100%',height:160,marginTop:8,padding:8,borderRadius:8}} value={transcript} onChange={e=>setTranscript(e.target.value)} /></div></div>
<div style={{display:'grid',gap:16,gridTemplateColumns:'1fr 1fr 1fr',marginTop:24}}>
<div><label style={{fontWeight:500}}>Rewrite</label><div style={{display:'flex',gap:8}}><select value={voice} onChange={(e)=>setVoice(e.target.value)}><option value="alloy">Alloy</option><option value="verse">Verse</option><option value="bright">Bright</option></select><button onClick={rewrite} disabled={!transcript||loading==='rewrite'}>{loading==='rewrite'?'…':'Rewrite'}</button></div><textarea style={{width:'100%',height:160,marginTop:8,padding:8,borderRadius:8}} value={script} onChange={e=>setScript(e.target.value)} /></div>
<div><label style={{fontWeight:500}}>Generate images</label><button style={{width:'100%',padding:8,borderRadius:8}} onClick={generate} disabled={!script||loading==='gen'}>{loading==='gen'?'Generating…':'Generate images'}</button><div style={{display:'grid',gridTemplateColumns:'1fr 1fr',gap:8,marginTop:8}}>{assets?.images?.map((x:any)=>(<img key={x.id} src={x.url} style={{width:'100%',borderRadius:8}}/>))}</div></div>
<div><label style={{fontWeight:500}}>Analyze beats</label><button style={{width:'100%',padding:8,borderRadius:8}} onClick={analyze} disabled={!script||loading==='analyze'}>{loading==='analyze'?'Analyzing…':'Make beats'}</button><div style={{fontSize:12,opacity:0.8,marginTop:8}}>{analysis?.beats?.length? `${analysis.beats.length} caption lines`: 'No beats yet'}</div></div></div>
<div style={{display:'grid',gap:16,gridTemplateColumns:'1fr 1fr',marginTop:24}}>
<div><label style={{fontWeight:500}}>Voice-over (TTS)</label><button style={{width:'100%',padding:8,borderRadius:8}} onClick={tts} disabled={!script||loading==='tts'}>{loading==='tts'?'Synthesizing…':'Generate VO'}</button>{voUrl&&(<audio controls src={voUrl} style={{width:'100%',marginTop:8}}/> )}</div>
<div><label style={{fontWeight:500}}>Assemble render</label><button style={{width:'100%',padding:8,borderRadius:8}} onClick={assemble} disabled={!analysis||!assets||!voUrl||loading==='assemble'}>{loading==='assemble'?'Rendering…':'Render 9:16 MP4'}</button>{renderUrl&&(<video src={renderUrl} controls style={{width:'100%',borderRadius:8,marginTop:8}} /> )}</div></div>
<p style={{fontSize:12,opacity:0.6,marginTop:24}}>v1 pipeline wired. Next: originality check gate + one-click publish.</p></main> ); }
